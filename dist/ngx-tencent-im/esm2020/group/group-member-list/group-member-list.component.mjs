import { Component, Input } from '@angular/core';
import { MESSAGE_STATUS } from '../../shared.data';
import { showAction } from '../../store/actions';
import { updateCurrentMemberListAction } from '../../store/actions/group.action';
import { currentMemberListSelector } from '../../store/selectors/group.selector';
import * as i0 from "@angular/core";
import * as i1 from "@ngrx/store";
import * as i2 from "../../tim-helper.service";
import * as i3 from "../group-member-info/group-member-info.component";
import * as i4 from "../../avatar/avatar.component";
import * as i5 from "ng-zorro-antd/core/transition-patch";
import * as i6 from "ng-zorro-antd/icon";
import * as i7 from "ng-zorro-antd/popover";
import * as i8 from "@angular/common";
import * as i9 from "ng-zorro-antd/input";
import * as i10 from "@angular/forms";
export class GroupMemberListComponent {
    constructor(store, timHelperService) {
        this.store = store;
        this.timHelperService = timHelperService;
        this.currentMemberList = [];
        this.currentMemberID = '';
        this.count = 30;
    }
    get members() {
        return this.currentMemberList.slice(0, this.count);
    }
    get showLoadMore() {
        return this.members.length < this.currentConversation.groupProfile.memberNum;
    }
    ngOnInit() {
        // 获取当group前成员
        this.subscription = this.store.select(currentMemberListSelector).subscribe(res => {
            this.currentMemberList = res;
        });
    }
    addGroupMember() {
        const groupID = this.currentConversation.conversationID.replace('GROUP', '');
        this.timHelperService.tim
            .addGroupMember({
            groupID,
            userIDList: [this.userID]
        })
            .then((imResponse) => {
            const { successUserIDList, failureUserIDList, existedUserIDList } = imResponse.data;
            if (successUserIDList.length > 0) {
                this.store.dispatch(showAction({ msgType: MESSAGE_STATUS.success, message: `群成员：${successUserIDList.join(',')}，加群成功` }));
                this.timHelperService.tim.getGroupMemberProfile({ groupID, userIDList: successUserIDList })
                    .then(({ data: { memberList } }) => {
                    this.store.dispatch(updateCurrentMemberListAction({ currentMemberList: memberList }));
                    this.popoverVisible = false;
                });
            }
            if (failureUserIDList.length > 0) {
                this.store.dispatch(showAction({ msgType: MESSAGE_STATUS.error, message: `群成员：${failureUserIDList.join(',')}，添加失败！` }));
            }
            if (existedUserIDList.length > 0) {
                this.store.dispatch(showAction({ msgType: MESSAGE_STATUS.warning, message: `群成员：${existedUserIDList.join(',')}，已在群中` }));
            }
        })
            .catch(error => {
            this.store.dispatch(showAction({ msgType: MESSAGE_STATUS.error, message: error.message }));
        });
    }
    getGroupMemberAvatarText(role) {
        switch (role) {
            case 'Owner':
                return '群主';
            case 'Admin':
                return '管理员';
            default:
                return '群成员';
        }
    }
    loadMore() {
        this.timHelperService.getGroupMemberList(this.currentConversation.groupProfile.groupID);
        this.count += 30;
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
}
GroupMemberListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.8", ngImport: i0, type: GroupMemberListComponent, deps: [{ token: i1.Store }, { token: i2.TimHelperService }], target: i0.ɵɵFactoryTarget.Component });
GroupMemberListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.8", type: GroupMemberListComponent, selector: "app-group-member-list", inputs: { currentConversation: "currentConversation" }, ngImport: i0, template: "<div class=\"group-member-list-wrapper\">\r\n  <div class=\"header\">\r\n    <span\r\n      class=\"member-count text-ellipsis\">\u7FA4\u6210\u5458\uFF1A{{this.currentConversation?.groupProfile.memberCount}}</span>\r\n    <i nz-icon nzType=\"user-add\" nzTheme=\"outline\"\r\n      [ngStyle]=\"{'font-size': '1.5em','cursor':'pointer'}\" nz-popover\r\n      [nzPopoverContent]=\"addGroupTemplate\" nzPopoverPlacement=\"topRight\" nzPopoverTrigger=\"click\"\r\n      [nzPopoverVisible]=\"popoverVisible\"></i>\r\n\r\n    <ng-template #addGroupTemplate>\r\n      <input nz-input [(ngModel)]=\"userID\" placeholder=\"\u56DE\u8F66\u786E\u8BA4\" (keydown.enter)=\"addGroupMember()\">\r\n    </ng-template>\r\n\r\n  </div>\r\n  <div class=\"scroll-content\">\r\n    <div class=\"group-member-list\">\r\n      <div *ngFor=\"let member of members;\" nz-popover [nzPopoverContent]=\"contentTemplate\"\r\n        nzPopoverPlacement=\"topRight\" nzPopoverTrigger=\"click\" [nzPopoverVisible]=\"popoverVisible\">\r\n        <ng-template #contentTemplate>\r\n          <app-group-member-info [member]=\"member\" [currentConversation]=\"currentConversation\"\r\n            (enterEnd)=\"popoverVisible=false\">\r\n          </app-group-member-info>\r\n        </ng-template>\r\n\r\n        <div class=\"group-member\" (click)=\"currentMemberID = member.userID\">\r\n          <im-avatar [title]=\"getGroupMemberAvatarText(member.role)\" [src]=\"member.avatar\">\r\n          </im-avatar>\r\n          <div class=\"member-name text-ellipsis\">\r\n            <span *ngIf=\"member.nameCard\" [title]=\"member.nameCard\">{{ member.nameCard }}</span>\r\n            <span *ngIf=\"member.nick\" [title]=\"member.nick\">{{ member.nick }}</span>\r\n            <span *ngIf=\"!member.nameCard&&!member.nick\"\r\n              [title]=\"member.userID\">{{ member.userID }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"more\">\r\n    <a *ngIf=\"showLoadMore\" (click)=\"loadMore()\">\u67E5\u770B\u66F4\u591A</a>\r\n  </div>\r\n</div>\r\n", styles: [".group-member-list-wrapper .header{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:space-between;align-items:center;height:50px;padding:10px 16px 10px 20px;border-bottom:1px solid #e7e7e7}.group-member-list-wrapper .header .member-count{display:inline-block;max-width:130px;line-height:30px;font-size:14px;vertical-align:bottom}.group-member-list-wrapper .header .btn-add-member{width:30px;height:30px;font-size:28px;text-align:center;line-height:32px;cursor:pointer;float:right}.group-member-list-wrapper .header .btn-add-member:hover{color:#5cadff}.group-member-list-wrapper .scroll-content{max-height:250px;overflow-y:scroll;padding:10px 15px;width:100%}.group-member-list-wrapper .scroll-content .group-member-list{display:flex;justify-content:flex-start;flex-wrap:wrap;width:100%}.group-member-list-wrapper .scroll-content .group-member{width:60px;height:60px;display:flex;justify-content:center;align-content:center;flex-direction:column;align-items:center;text-align:center;color:#000;cursor:pointer}.group-member-list-wrapper .scroll-content .group-member im-avatar::ng-deep .avatar{width:40px;height:40px;border-radius:50%}.group-member-list-wrapper .scroll-content .group-member .member-name{font-size:12px;width:40px;text-align:center}.group-member-list-wrapper .more{padding:0 20px;border-bottom:1px solid #e7e7e7}\n"], components: [{ type: i3.GroupMemberInfoComponent, selector: "app-group-member-info", inputs: ["member", "currentConversation"], outputs: ["enterEnd"] }, { type: i4.AvatarComponent, selector: "im-avatar", inputs: ["shape", "size", "type", "title", "src"] }], directives: [{ type: i5.ɵNzTransitionPatchDirective, selector: "[nz-button], nz-button-group, [nz-icon], [nz-menu-item], [nz-submenu], nz-select-top-control, nz-select-placeholder, nz-input-group", inputs: ["hidden"] }, { type: i6.NzIconDirective, selector: "[nz-icon]", inputs: ["nzSpin", "nzRotate", "nzType", "nzTheme", "nzTwotoneColor", "nzIconfont"], exportAs: ["nzIcon"] }, { type: i7.NzPopoverDirective, selector: "[nz-popover]", inputs: ["nzPopoverArrowPointAtCenter", "nzPopoverTitle", "nzPopoverContent", "nz-popover", "nzPopoverTrigger", "nzPopoverPlacement", "nzPopoverOrigin", "nzPopoverVisible", "nzPopoverMouseEnterDelay", "nzPopoverMouseLeaveDelay", "nzPopoverOverlayClassName", "nzPopoverOverlayStyle", "nzPopoverBackdrop"], outputs: ["nzPopoverVisibleChange"], exportAs: ["nzPopover"] }, { type: i8.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i9.NzInputDirective, selector: "input[nz-input],textarea[nz-input]", inputs: ["nzBorderless", "nzSize", "disabled"], exportAs: ["nzInput"] }, { type: i10.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i10.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i10.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i8.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.8", ngImport: i0, type: GroupMemberListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-group-member-list', template: "<div class=\"group-member-list-wrapper\">\r\n  <div class=\"header\">\r\n    <span\r\n      class=\"member-count text-ellipsis\">\u7FA4\u6210\u5458\uFF1A{{this.currentConversation?.groupProfile.memberCount}}</span>\r\n    <i nz-icon nzType=\"user-add\" nzTheme=\"outline\"\r\n      [ngStyle]=\"{'font-size': '1.5em','cursor':'pointer'}\" nz-popover\r\n      [nzPopoverContent]=\"addGroupTemplate\" nzPopoverPlacement=\"topRight\" nzPopoverTrigger=\"click\"\r\n      [nzPopoverVisible]=\"popoverVisible\"></i>\r\n\r\n    <ng-template #addGroupTemplate>\r\n      <input nz-input [(ngModel)]=\"userID\" placeholder=\"\u56DE\u8F66\u786E\u8BA4\" (keydown.enter)=\"addGroupMember()\">\r\n    </ng-template>\r\n\r\n  </div>\r\n  <div class=\"scroll-content\">\r\n    <div class=\"group-member-list\">\r\n      <div *ngFor=\"let member of members;\" nz-popover [nzPopoverContent]=\"contentTemplate\"\r\n        nzPopoverPlacement=\"topRight\" nzPopoverTrigger=\"click\" [nzPopoverVisible]=\"popoverVisible\">\r\n        <ng-template #contentTemplate>\r\n          <app-group-member-info [member]=\"member\" [currentConversation]=\"currentConversation\"\r\n            (enterEnd)=\"popoverVisible=false\">\r\n          </app-group-member-info>\r\n        </ng-template>\r\n\r\n        <div class=\"group-member\" (click)=\"currentMemberID = member.userID\">\r\n          <im-avatar [title]=\"getGroupMemberAvatarText(member.role)\" [src]=\"member.avatar\">\r\n          </im-avatar>\r\n          <div class=\"member-name text-ellipsis\">\r\n            <span *ngIf=\"member.nameCard\" [title]=\"member.nameCard\">{{ member.nameCard }}</span>\r\n            <span *ngIf=\"member.nick\" [title]=\"member.nick\">{{ member.nick }}</span>\r\n            <span *ngIf=\"!member.nameCard&&!member.nick\"\r\n              [title]=\"member.userID\">{{ member.userID }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"more\">\r\n    <a *ngIf=\"showLoadMore\" (click)=\"loadMore()\">\u67E5\u770B\u66F4\u591A</a>\r\n  </div>\r\n</div>\r\n", styles: [".group-member-list-wrapper .header{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:space-between;align-items:center;height:50px;padding:10px 16px 10px 20px;border-bottom:1px solid #e7e7e7}.group-member-list-wrapper .header .member-count{display:inline-block;max-width:130px;line-height:30px;font-size:14px;vertical-align:bottom}.group-member-list-wrapper .header .btn-add-member{width:30px;height:30px;font-size:28px;text-align:center;line-height:32px;cursor:pointer;float:right}.group-member-list-wrapper .header .btn-add-member:hover{color:#5cadff}.group-member-list-wrapper .scroll-content{max-height:250px;overflow-y:scroll;padding:10px 15px;width:100%}.group-member-list-wrapper .scroll-content .group-member-list{display:flex;justify-content:flex-start;flex-wrap:wrap;width:100%}.group-member-list-wrapper .scroll-content .group-member{width:60px;height:60px;display:flex;justify-content:center;align-content:center;flex-direction:column;align-items:center;text-align:center;color:#000;cursor:pointer}.group-member-list-wrapper .scroll-content .group-member im-avatar::ng-deep .avatar{width:40px;height:40px;border-radius:50%}.group-member-list-wrapper .scroll-content .group-member .member-name{font-size:12px;width:40px;text-align:center}.group-member-list-wrapper .more{padding:0 20px;border-bottom:1px solid #e7e7e7}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.Store }, { type: i2.TimHelperService }]; }, propDecorators: { currentConversation: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,