import { Component, Input } from '@angular/core';
import { getDate, getTime, isToday } from '../../util/date';
import { currentUserProfileSelector } from '../../store/selectors';
import { resetCurrentConversationAction, showAction } from '../../store/actions';
import TIM from 'tim-js-sdk';
import { MESSAGE_STATUS } from '../../shared.data';
import * as i0 from "@angular/core";
import * as i1 from "@ngrx/store";
import * as i2 from "../../tim-helper.service";
import * as i3 from "../../avatar/avatar.component";
import * as i4 from "@angular/common";
export class ConversationItemComponent {
    constructor(store, timHelperService) {
        this.store = store;
        this.timHelperService = timHelperService;
        this.TIM = TIM;
    }
    ngOnInit() {
        this.profileSubscription = this.store.select(currentUserProfileSelector)
            .subscribe(res => {
            this.currentUserProfile = res;
        });
    }
    selectConversation() {
        if (this.conversation.conversationID !== this.currentConversation.conversationID) {
            this.timHelperService.checkoutConversation(this.conversation.conversationID);
            // this.timHelperService.eventBus$.next('select-item');
        }
    }
    get avatarSrc() {
        switch (this.conversation.type) {
            case 'GROUP':
                return this.conversation.groupProfile?.avatar;
            case 'C2C':
                return this.conversation.userProfile?.avatar;
            default:
                return null;
        }
    }
    ;
    get date() {
        if (!this.conversation.lastMessage || !this.conversation.lastMessage.lastTime) {
            return '';
        }
        const date = new Date(this.conversation.lastMessage.lastTime * 1000);
        if (isToday(date)) {
            return getTime(date);
        }
        return getDate(date);
    }
    get messageForShow() {
        if (this.conversation.lastMessage.isRevoked) {
            if (this.conversation.lastMessage.fromAccount === this.currentUserProfile?.userID) {
                return '你撤回了一条消息';
            }
            if (this.conversation.type === TIM.TYPES.CONV_C2C) {
                return '对方撤回了一条消息';
            }
            return `${this.conversation.lastMessage.fromAccount}撤回了一条消息`;
        }
        return this.conversation.lastMessage.messageForShow;
    }
    get conversationName() {
        if (this.conversation.type === TIM.TYPES.CONV_C2C) {
            return this.conversation.userProfile.nick || this.conversation.userProfile.userID;
        }
        if (this.conversation.type === TIM.TYPES.CONV_GROUP) {
            return this.conversation.groupProfile.name || this.conversation.groupProfile.groupID;
        }
        if (this.conversation.type === TIM.TYPES.CONV_SYSTEM) {
            return '系统通知';
        }
        return '';
    }
    deleteConversation(event) {
        // 停止冒泡，避免和点击会话的事件冲突
        event.stopPropagation();
        this.timHelperService.tim
            .deleteConversation(this.conversation.conversationID)
            .then(() => {
            this.store.dispatch(showAction({
                message: `会话【${this.conversationName}】删除成功!`,
                msgType: MESSAGE_STATUS.success
            }));
            this.store.dispatch(resetCurrentConversationAction());
        })
            .catch(error => {
            this.store.dispatch(showAction({
                message: `会话【${this.conversationName}】删除失败!, error=${error.message}`,
                msgType: MESSAGE_STATUS.error
            }));
        });
    }
    ngOnDestroy() {
        if (this.profileSubscription) {
            this.profileSubscription.unsubscribe();
        }
    }
}
ConversationItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.8", ngImport: i0, type: ConversationItemComponent, deps: [{ token: i1.Store }, { token: i2.TimHelperService }], target: i0.ɵɵFactoryTarget.Component });
ConversationItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.8", type: ConversationItemComponent, selector: "app-conversation-item", inputs: { currentConversation: "currentConversation", conversation: "conversation" }, ngImport: i0, template: "<div class=\"conversation-item-container\"\r\n  [ngClass]=\"{'choose': conversation.conversationID === currentConversation.conversationID }\"\r\n  (click)=\"selectConversation()\">\r\n  <div class=\"close-btn\">\r\n    <span class=\"tim-icon-close\" title=\"\u5220\u9664\u4F1A\u8BDD\" (click)=\"deleteConversation($event)\"></span>\r\n  </div>\r\n  <div class=\"warp\">\r\n    <im-avatar [src]=\"avatarSrc\" [type]=\"conversation.type\"></im-avatar>\r\n    <div class=\"content\">\r\n      <div class=\"row-1\">\r\n        <div class=\"name\">\r\n          <div class=\"text-ellipsis\">\r\n            <span [title]=\"conversation.userProfile.nick || conversation.userProfile.userID\"\r\n              *ngIf=\"conversation.type ===  TIM.TYPES.CONV_C2C\">\r\n              {{conversation.userProfile.nick || conversation.userProfile.userID}}\r\n            </span>\r\n            <span [title]=\"conversation.groupProfile.name || conversation.groupProfile.groupID\"\r\n              *ngIf=\"conversation.type===TIM.TYPES.CONV_GROUP\">\r\n              {{conversation.groupProfile.name || conversation.groupProfile.groupID}}\r\n            </span>\r\n            <span *ngIf=\"conversation.type === TIM.TYPES.CONV_SYSTEM\">\u7CFB\u7EDF\u901A\u77E5\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"unread-count\">\r\n          <span class=\"badge\" *ngIf=\"this.conversation.unreadCount > 0\">\r\n            {{conversation.unreadCount > 99 ? '99+' : conversation.unreadCount}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"row-2\">\r\n        <div class=\"summary\">\r\n          <div v-if=\"conversation.lastMessage\" class=\"text-ellipsis\">\r\n            <!-- <span class=\"remind\" style=\"color:red;\">[\u6709\u4EBA\u63D0\u5230\u6211]</span> -->\r\n            <span class=\"text\" [title]=\"conversation.lastMessage.messageForShow\">\r\n              {{messageForShow}}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"date\">\r\n          {{date}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", styles: [".conversation-item-container{padding:15px 10px;cursor:pointer;position:relative;overflow:hidden;transition:.2s}.conversation-item-container:hover{background-color:#404953}.conversation-item-container:hover .close-btn{right:3px}.conversation-item-container .close-btn{position:absolute;right:-20px;top:3px;color:#76828c;transition:all .2s ease}.conversation-item-container .close-btn:hover{color:#f35f5f}.conversation-item-container .warp{display:flex}.conversation-item-container .warp im-avatar{padding-right:10px}.conversation-item-container .content{flex:1;height:40px;overflow:hidden}.conversation-item-container .content .row-1{display:flex;line-height:21px}.conversation-item-container .content .row-1 .name{color:#f7f7f8;flex:1;min-width:0px}.conversation-item-container .content .row-1 .unread-count{padding-left:10px;flex-shrink:0;color:#76828c;font-size:12px}.conversation-item-container .content .row-1 .unread-count .badge{vertical-align:bottom;background-color:#f35f5f;border-radius:10px;color:#fff;display:inline-block;font-size:12px;height:18px;max-width:40px;line-height:18px;padding:0 6px;text-align:center;white-space:nowrap}.conversation-item-container .content .row-2{display:flex;font-size:12px;padding-top:3px}.conversation-item-container .content .row-2 .summary{flex:1;overflow:hidden;min-width:0px;color:#a5b5c1}.conversation-item-container .content .row-2 .summary .remind{color:#f35f5f}.conversation-item-container .content .row-2 .date{padding-left:10px;flex-shrink:0;text-align:right;color:#76828c}.choose{background-color:#404953}.context-menu-button{padding:10px;border:2px solid #2d8cf0;border-radius:8px}\n"], components: [{ type: i3.AvatarComponent, selector: "im-avatar", inputs: ["shape", "size", "type", "title", "src"] }], directives: [{ type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.8", ngImport: i0, type: ConversationItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-conversation-item', template: "<div class=\"conversation-item-container\"\r\n  [ngClass]=\"{'choose': conversation.conversationID === currentConversation.conversationID }\"\r\n  (click)=\"selectConversation()\">\r\n  <div class=\"close-btn\">\r\n    <span class=\"tim-icon-close\" title=\"\u5220\u9664\u4F1A\u8BDD\" (click)=\"deleteConversation($event)\"></span>\r\n  </div>\r\n  <div class=\"warp\">\r\n    <im-avatar [src]=\"avatarSrc\" [type]=\"conversation.type\"></im-avatar>\r\n    <div class=\"content\">\r\n      <div class=\"row-1\">\r\n        <div class=\"name\">\r\n          <div class=\"text-ellipsis\">\r\n            <span [title]=\"conversation.userProfile.nick || conversation.userProfile.userID\"\r\n              *ngIf=\"conversation.type ===  TIM.TYPES.CONV_C2C\">\r\n              {{conversation.userProfile.nick || conversation.userProfile.userID}}\r\n            </span>\r\n            <span [title]=\"conversation.groupProfile.name || conversation.groupProfile.groupID\"\r\n              *ngIf=\"conversation.type===TIM.TYPES.CONV_GROUP\">\r\n              {{conversation.groupProfile.name || conversation.groupProfile.groupID}}\r\n            </span>\r\n            <span *ngIf=\"conversation.type === TIM.TYPES.CONV_SYSTEM\">\u7CFB\u7EDF\u901A\u77E5\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"unread-count\">\r\n          <span class=\"badge\" *ngIf=\"this.conversation.unreadCount > 0\">\r\n            {{conversation.unreadCount > 99 ? '99+' : conversation.unreadCount}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"row-2\">\r\n        <div class=\"summary\">\r\n          <div v-if=\"conversation.lastMessage\" class=\"text-ellipsis\">\r\n            <!-- <span class=\"remind\" style=\"color:red;\">[\u6709\u4EBA\u63D0\u5230\u6211]</span> -->\r\n            <span class=\"text\" [title]=\"conversation.lastMessage.messageForShow\">\r\n              {{messageForShow}}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"date\">\r\n          {{date}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", styles: [".conversation-item-container{padding:15px 10px;cursor:pointer;position:relative;overflow:hidden;transition:.2s}.conversation-item-container:hover{background-color:#404953}.conversation-item-container:hover .close-btn{right:3px}.conversation-item-container .close-btn{position:absolute;right:-20px;top:3px;color:#76828c;transition:all .2s ease}.conversation-item-container .close-btn:hover{color:#f35f5f}.conversation-item-container .warp{display:flex}.conversation-item-container .warp im-avatar{padding-right:10px}.conversation-item-container .content{flex:1;height:40px;overflow:hidden}.conversation-item-container .content .row-1{display:flex;line-height:21px}.conversation-item-container .content .row-1 .name{color:#f7f7f8;flex:1;min-width:0px}.conversation-item-container .content .row-1 .unread-count{padding-left:10px;flex-shrink:0;color:#76828c;font-size:12px}.conversation-item-container .content .row-1 .unread-count .badge{vertical-align:bottom;background-color:#f35f5f;border-radius:10px;color:#fff;display:inline-block;font-size:12px;height:18px;max-width:40px;line-height:18px;padding:0 6px;text-align:center;white-space:nowrap}.conversation-item-container .content .row-2{display:flex;font-size:12px;padding-top:3px}.conversation-item-container .content .row-2 .summary{flex:1;overflow:hidden;min-width:0px;color:#a5b5c1}.conversation-item-container .content .row-2 .summary .remind{color:#f35f5f}.conversation-item-container .content .row-2 .date{padding-left:10px;flex-shrink:0;text-align:right;color:#76828c}.choose{background-color:#404953}.context-menu-button{padding:10px;border:2px solid #2d8cf0;border-radius:8px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.Store }, { type: i2.TimHelperService }]; }, propDecorators: { currentConversation: [{
                type: Input
            }], conversation: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,